linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
compiling kernel/core.c
compiling kernel/elf.c
compiling kernel/kernel.c
compiling kernel/process.c
compiling kernel/sched.c
compiling kernel/strap.c
compiling kernel/syscall.c
compiling kernel/machine/mtrap.c
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking hostfs_root/bin/app_shell ...
User app has been built into "hostfs_root/bin/app_shell"
********************HUST PKE********************
spike -p2 obj/riscv-pke /bin/lab3_1
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
hartid = 0 >> Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080015000, PKE kernel size: 0x0000000000015000 .
free physical memory address: [0x0000000080015000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x000000008000a000
kernel page table is on 
RAMDISK0: base address of RAMDISK0 is: 0x0000000087f35000
RFS: format RAMDISK0 done!
hartid = 0 >> Switch to user mode...
hartid = 0 >> in alloc_proc. user frame 0x0000000087f29000, user stack 0x000000007ffff000, user kstack 0x0000000087f28000 
FS: created a file management struct for a process.
hartid = 0 >> in alloc_proc. build proc_file_management successfully.
hartid = 0 >> User application is loading.
hartid = 0 >> Application: /bin/lab3_1
hartid = 0 >> CODE_SEGMENT added at mapped info offset:4
hartid = 0 >> DATA_SEGMENT added at mapped info offset:5
hartid = 0 >> Application program entry point (virtual address): 0x00000000000100b0
hartid = 0 >> going to insert process 0 to ready queue.
In m_start, hartid:1
hartid = 1 >> Enter supervisor mode...
hartid = 1 >> Switch to user mode...
hartid = 1 >> hartid = 0 going to schedule process 0 to run.
no more ready processes
hartid = 0 >> User(pid = 0) call fork.
hartid = 0 >> will fork a child from parent 0.
hartid = 0 >> in alloc_proc. user frame 0x0000000087f19000, user stack 0x000000007ffff000, user kstack 0x0000000087f1b000 
FS: created a file management struct for a process.
hartid = 0 >> in alloc_proc. build proc_file_management successfully.
hartid = 0 >> do_fork map code segment at pa:0000000087f13000 of parent to child at va:0000000000010000.
hartid = 0 >> going to insert process 1 to ready queue.
hartid = 0 >> hartid = 1 going to schedule process 1 to run.
hartid = 1 >> User(pid = 1) call fork.
hartid = 1 >> will fork a child from parent 1.
hartid = 1 >> in alloc_proc. user frame 0x0000000087f05000, user stack 0x000000007ffff000, user kstack 0x0000000087f04000 
FS: created a file management struct for a process.
hartid = 1 >> in alloc_proc. build proc_file_management successfully.
hartid = 1 >> do_fork map code segment at pa:0000000087f13000 of parent to child at va:0000000000010000.
hartid = 1 >> going to insert process 2 to ready queue.
hartid = 1 >> hartid = 0 going to schedule process 2 to run.
Grandchild process end, flag = 2.
hartid = 0 >> User(pid = 2) exit with code:0.
hartid = 0 >> going to insert process 1 to ready queue.
hartid = 0 >> hartid = 1 going to schedule process 1 to run.
Child process end, flag = 1.
hartid = 1 >> User(pid = 1) exit with code:0.
hartid = 1 >> going to insert process 0 to ready queue.
hartid = 1 >> hartid = 0 going to schedule process 0 to run.
Parent process end, flag = 0.
hartid = 0 >> User(pid = 0) exit with code:0.
no more ready processes
System is shutting down with exit code 0.
